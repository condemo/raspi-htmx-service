package components

import (
	"fmt"
	"github.com/condemo/raspi-htmx-service/services/common/genproto/pb"
)

templ ServiceCarousel(services []*pb.RaspiService) {
	<div id="service-carousel">
		<div class="carousel carousel-center bg-neutral rounded-box w-full h-50 space-x-4 p-4 my-1">
			for _, s := range services {
				@ServiceCard(s)
			}
			// TODO: Borrar llegado el momento
			for range 8 - len(services) {
				@ServiceCard(&pb.RaspiService{Name: "Demo", Status: false})
			}
		</div>
	</div>
}

templ ServiceCard(s *pb.RaspiService) {
	<div id="service-card">
		<div class="carousel-item">
			<div class="card bg-base-100 w-72">
				if s.Status {
					<figure
						class="group h-10 rounded-3xl m-1 bg-success hover:cursor-pointer hover:bg-base-100"
						hx-get={ string(templ.URL(fmt.Sprintf("/services/full/%d", s.GetId()))) }
						hx-target="#service-full-info"
						hx-swap="innerHTML show:top"
					>
						<h1 class="z-10 text-black group-hover:text-white">{ s.GetName() }</h1>
					</figure>
					@ServiceInfo(s.GetData())
				} else {
					<figure class="h-10 rounded-3xl m-1 bg-base-300 hover:cursor-pointer hover:bg-base-100">
						<h1 class="z-10 text-white">{ s.GetName() }</h1>
					</figure>
				}
				<div class="card-actions w-full flex justify-evenly">
					@ServiceSwitchButton(s.Status, s.Id)
					<button
						class="btn bg-base-200 w-31"
						hx-get={ string(templ.URL(fmt.Sprintf("/services/config/%d", s.GetId()))) }
						hx-target="#config-section"
					>
						<svg
							xmlns="http://www.w3.org/2000/svg"
							fill="none"
							viewBox="0 0 24 24"
							stroke-width="1.5"
							stroke="currentColor"
							class="size-6"
						>
							<path
								stroke-linecap="round"
								stroke-linejoin="round"
								d="M9.594 3.94c.09-.542.56-.94 1.11-.94h2.593c.55 0 1.02.398 1.11.94l.213 1.281c.063.374.313.686.645.87.074.04.147.083.22.127.325.196.72.257 1.075.124l1.217-.456a1.125 1.125 0 0 1 1.37.49l1.296 2.247a1.125 1.125 0 0 1-.26 1.431l-1.003.827c-.293.241-.438.613-.43.992a7.723 7.723 0 0 1 0 .255c-.008.378.137.75.43.991l1.004.827c.424.35.534.955.26 1.43l-1.298 2.247a1.125 1.125 0 0 1-1.369.491l-1.217-.456c-.355-.133-.75-.072-1.076.124a6.47 6.47 0 0 1-.22.128c-.331.183-.581.495-.644.869l-.213 1.281c-.09.543-.56.94-1.11.94h-2.594c-.55 0-1.019-.398-1.11-.94l-.213-1.281c-.062-.374-.312-.686-.644-.87a6.52 6.52 0 0 1-.22-.127c-.325-.196-.72-.257-1.076-.124l-1.217.456a1.125 1.125 0 0 1-1.369-.49l-1.297-2.247a1.125 1.125 0 0 1 .26-1.431l1.004-.827c.292-.24.437-.613.43-.991a6.932 6.932 0 0 1 0-.255c.007-.38-.138-.751-.43-.992l-1.004-.827a1.125 1.125 0 0 1-.26-1.43l1.297-2.247a1.125 1.125 0 0 1 1.37-.491l1.216.456c.356.133.751.072 1.076-.124.072-.044.146-.086.22-.128.332-.183.582-.495.644-.869l.214-1.28Z"
							></path>
							<path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z"></path>
						</svg>
					</button>
					<div id="config-section"></div>
				</div>
			</div>
		</div>
	</div>
}

templ ServiceInfo(data *pb.ServiceCardData) {
	<div id="card-body">
		<figure>
			<img src={ data.GetIcon() } alt="icon"/>
			<p class="text-2xl my-2">
				{ data.GetDataText() }
			</p>
		</figure>
		<p class="text-xs text-gray-500 mb-1">last updated: { data.GetLastUpdated() }</p>
	</div>
}

templ ServiceSwitchButton(state bool, id int32) {
	<div id="service-switch-button">
		if state {
			<button
				class="btn bg-base-300 border-base-300 w-36"
				hx-target="closest #service-card"
				hx-post={ string(templ.URL(fmt.Sprintf("/services/stop/%d", id))) }
				hx-swap="outerHTMX"
			>
				<svg
					xmlns="http://www.w3.org/2000/svg"
					fill="none"
					viewBox="0 0 24 24"
					stroke-width="1.5"
					stroke="currentColor"
					class="size-6"
				>
					<path
						stroke-linecap="round"
						stroke-linejoin="round"
						d="M5.25 7.5A2.25 2.25 0 0 1 7.5 5.25h9a2.25 2.25 0 0 1 2.25 2.25v9a2.25 2.25 0 0 1-2.25 2.25h-9a2.25 2.25 0 0 1-2.25-2.25v-9Z"
					></path>
				</svg>
			</button>
		} else {
			<button
				class="btn btn-success w-36 border-success"
				hx-target="#service-card"
				hx-post={ string(templ.URL(fmt.Sprintf("/services/start/%d", id))) }
				hx-swap="outerHTMX"
			>
				<svg
					xmlns="http://www.w3.org/2000/svg"
					fill="none"
					viewBox="0 0 24 24"
					stroke-width="1.5"
					stroke="currentColor"
					class="size-6"
				>
					<path
						stroke-linecap="round"
						stroke-linejoin="round"
						d="M5.25 5.653c0-.856.917-1.398 1.667-.986l11.54 6.347a1.125 1.125 0 0 1 0 1.972l-11.54 6.347a1.125 1.125 0 0 1-1.667-.986V5.653Z"
					></path>
				</svg>
			</button>
		}
	</div>
}
